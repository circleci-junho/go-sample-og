/*
CFD

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MenuItem struct for MenuItem
type MenuItem struct {
	Id int32 `json:"id"`
	Description string `json:"description"`
	Name string `json:"name"`
	Price float32 `json:"price"`
	// URL to an image of the menu item. This should be the image from the /image endpoint 
	ImageId int32 `json:"imageId"`
}

// NewMenuItem instantiates a new MenuItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMenuItem(id int32, description string, name string, price float32, imageId int32) *MenuItem {
	this := MenuItem{}
	this.Id = id
	this.Description = description
	this.Name = name
	this.Price = price
	this.ImageId = imageId
	return &this
}

// NewMenuItemWithDefaults instantiates a new MenuItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMenuItemWithDefaults() *MenuItem {
	this := MenuItem{}
	return &this
}

// GetId returns the Id field value
func (o *MenuItem) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MenuItem) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MenuItem) SetId(v int32) {
	o.Id = v
}

// GetDescription returns the Description field value
func (o *MenuItem) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *MenuItem) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *MenuItem) SetDescription(v string) {
	o.Description = v
}

// GetName returns the Name field value
func (o *MenuItem) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MenuItem) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MenuItem) SetName(v string) {
	o.Name = v
}

// GetPrice returns the Price field value
func (o *MenuItem) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *MenuItem) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *MenuItem) SetPrice(v float32) {
	o.Price = v
}

// GetImageId returns the ImageId field value
func (o *MenuItem) GetImageId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value
// and a boolean to check if the value has been set.
func (o *MenuItem) GetImageIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageId, true
}

// SetImageId sets field value
func (o *MenuItem) SetImageId(v int32) {
	o.ImageId = v
}

func (o MenuItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["price"] = o.Price
	}
	if true {
		toSerialize["imageId"] = o.ImageId
	}
	return json.Marshal(toSerialize)
}

type NullableMenuItem struct {
	value *MenuItem
	isSet bool
}

func (v NullableMenuItem) Get() *MenuItem {
	return v.value
}

func (v *NullableMenuItem) Set(val *MenuItem) {
	v.value = val
	v.isSet = true
}

func (v NullableMenuItem) IsSet() bool {
	return v.isSet
}

func (v *NullableMenuItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMenuItem(val *MenuItem) *NullableMenuItem {
	return &NullableMenuItem{value: val, isSet: true}
}

func (v NullableMenuItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMenuItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


